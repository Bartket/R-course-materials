8**2
x <- c(1:10)
x[(x>8) | (x<5)]
v1
v2
x
x
v2
x <- c(1:10)
x[(x>8) | (x<5)]
x[(x>8) & (x<5)]
max(x)
max(x[(x>8) | (x<5)])
x[(x>8)]
x[(x<8)]
max(x[(x<8)])
seq(1,10,2)
seq(1,100,2)
seq(1,100,3)
rep(1:3, 2)
rep(c(1:3), 2)
rep(1:3, 10)
rep("ok", 10)
mtcars <- mtcars
View(mtcars)
View(mtcars)
View(mtcars)
View(mtcars)
head(mtcars)
head(mtcars,2)
?head
head(mtcars,2)
head(mtcars,n = 2)
tail(mtcars,n = 2)
View(mtcars)
#select first row
mtcars[1,]
#select first row
N1_mtcars<- mtcars[1,]
View(N1_mtcars)
#select first row
N1_mtcars<- mtcars[2,]
#select first 10 rows
mtcars[1:10,]
head(mtcars,10)
#select first 10 rows
mtcars[5:10,]
#select first column
mtcars[,1]
#select first column
class(mtcars[,1])
mtcars[,1:3]
#select first three column
mtcars[5:10,1:3]
#select first three column
slice <- mtcars[5:10,1:3]
#select records where mpg is > than 10
mtcars[mtcars$mpg > 10,]
#select records where mpg is > than 10
mpg_bigger_10 <- mtcars[mtcars$mpg > 10,]
View(mpg_bigger_10)
mtcars$gear
#select records gear is equal 4
mtcars[mtcars$gear == 4]
#select records gear is equal 4
mtcars[mtcars$gear == 4,]
#select records gear is equal 5 AND mpg is > than 12
mtcars[mtcars$gear == 5 & mtcars$mpg > 12,]
#select records gear is not equal 3
mtcars[!mtcars$gear == 3,]
#select records gear is not equal 3
mtcars[mtcars$gear != 3,]
#OR
mtcars[!mtcars$gear != 3,]
plot(cars)
head(cars)
library(readr)
library(radxl)
library(readxl)
read_xlsx("Data/airbnb.xlsx")
airbnb <- read_xlsx("Data/airbnb.xlsx")
View(airbnb)
View(airbnb)
library(readxl)
airbnb <- read_excel("Data/airbnb.xlsx",
col_types = c("numeric", "blank", "text",
"text", "text", "numeric", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric"))
View(airbnb)
airbnb <- read_excel("Data/airbnb.xlsx",
col_types = c("numeric", "blank", "text",
"text", "text", "numeric", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric"))
airbnb <- read_excel("Data/airbnb.xlsx",
col_types = c("numeric", "skip", "text",
"text", "text", "numeric", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric"))
View(airbnb)
airbnb <- read_excel("Data/airbnb.xlsx",
col_types = c("numeric", "character", "text",
"text", "text", "numeric", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric"))
airbnb <- read_excel("Data/airbnb.xlsx",
col_types = c("numeric", "text", "text",
"text", "text", "numeric", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric"))
View(airbnb)
library(readxl)
airbnb <- read_excel("Data/airbnb.xlsx")
View(airbnb)
library(readr) # load data package
library(readxl) # load data package
library(dplyr) # data manipulation
library(lubridate) # working with dates
library(readr) # load data package
library(readxl) # load data package
library(dplyr) # data manipulation
library(lubridate) # working with dates
airbnb[airbnb$`Host Since`]
airbnb[airbnb$`Host Since`,]
airbnb_2 <- airbnb[airbnb$`Host Since`,]
View(airbnb_2)
Dates_Column <- airbnb$`Host Since`
which(is.na(airbnb$`Host Since`))
is.na(airbnb$`Host Since`)
which(is.na(airbnb$`Host Since`))
airbnb[!which(is.na(airbnb$`Host Since`)),]
airbnb[which(is.na(airbnb$`Host Since`)),]
airbnb[!which(is.na(airbnb$`Host Since`)),]
airbnb %>% filter(!is.na(airbnb$`Host Since`))
airbnb_2 <- airbnb %>% filter(!is.na(airbnb$`Host Since`))
View(airbnb_2)
?mutate
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$Host Since)) %>%
?ymd
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(airbnb$`Host Since`))
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(`Host Since`))
View(airbnb_2)
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(airbnb_2$`Host Since`))
View(airbnb_2)
Dates_column2 <- airbnb_2$Host_Since
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(`Host Since`)) %>%
filter(Host_Since >= 2015-01-01)
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(`Host Since`)) %>%
filter(Host_Since >= "2015-01-01")
View(airbnb_2)
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(`Host Since`)) %>%
filter(Host_Since >= "2015-01-01" & Host_Since <= "2015-02-01")
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(`Host Since`)) %>%
filter(Host_Since >= "2015-01-01" & Host_Since < "2015-02-01")
write_delim(airbnb_2, "airbinb_analysis.csv", delim = ";")
setwd("output")
write_delim(airbnb_2, "airbinb_analysis.csv", delim = ";")
setwd("output")
write_delim(airbnb_2, "airbinb_analysis.csv", delim = ";")
setwd("output")
write_delim(airbnb_2, "airbinb_analysis.csv", delim = ",")
setwd("output")
write_delim(airbnb_2, "airbinb_analysis.csv", delim = ",")
setwd("output")
library(readr) # load data package
library(readxl) # load data package
library(dplyr) # data manipulation
library(lubridate) # working with dates
airbnb <- read_excel("Data/airbnb.xlsx",
col_types = c("numeric", "text", "text",
"text", "text", "numeric", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric"))
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(`Host Since`)) %>%
filter(Host_Since >= "2015-01-01" & Host_Since < "2015-02-01")
setwd("output")
write_delim(airbnb_2, "airbinb_analysis.csv", delim = ",")
read_delim("output/airbinb_analysis.csv")
read_delim("output/airbinb_analysis.csv", delim = ",")
Read_CSV <- read_delim("output/airbinb_analysis.csv", delim = ",")
setwd("output")
write_delim(airbnb_2, "airbinb_analysis.csv", delim = ",")
setwd("output")
Read_CSV <- read_delim("airbinb_analysis.csv", delim = ",")
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(`Host Since`)) %>%
filter(Host_Since >= "2015-01-01" & Host_Since < "2015-02-01")
library(readr) # load data package
library(readxl) # load data package
library(dplyr) # data manipulation
library(lubridate) # working with dates
airbnb <- read_excel("Data/airbnb.xlsx",
col_types = c("numeric", "text", "text",
"text", "text", "numeric", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric"))
View(airbnb)
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(`Host Since`))
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(`Host Since`)) %>%
filter(Host_Since >= "2015-01-01" & Host_Since < "2015-02-01")
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(`Host Since`))
View(airbnb_2)
airbnb <- read_excel("Data/airbnb.xlsx")
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(`Host Since`)) %>%
filter(Host_Since >= "2015-01-01" & Host_Since < "2015-02-01")
View(airbnb_2)
setwd("output")
Read_CSV <- read_delim("airbinb_analysis.csv", delim = ",")
setwd("output")
write_delim(airbnb_2, "airbinb_analysis.csv", delim = ",")
setwd("output")
Read_CSV <- read_delim("airbinb_analysis.csv", delim = ",")
View(Read_CSV)
View(airbnb)
airbnb %>% group_by(`Property Type`) %>% count(n=n())
airbnb %>% group_by(`Property Type`) %>% count()
library(tidyr)
airbnb %>% spread(.,Neighbourhood,Price)
airbnb[1:10] %>% spread(.,Neighbourhood,Price)
airbnb[1:10,] %>% spread(.,Neighbourhood,Price)
x <- airbnb[1:10,] %>% spread(.,Neighbourhood,Price)
View(x)
?group_by
rm(x)
airbnb %>% group_by(`Property Type`) %>% count()
P_type_cnt <- airbnb %>% group_by(`Property Type`) %>% count()
View(P_type_cnt)
P_type_cnt <- airbnb %>% group_by(`Property Type`) %>% mean(Price)
P_type_cnt <- airbnb %>% group_by(`Property Type`) %>% mutate(mean_price = mean(Price))
View(P_type_cnt)
P_type_cnt <- airbnb %>% group_by(`Property Type`) %>% summarise(mean(Price))
View(P_type_cnt)
P_type_cnt <- airbnb %>% group_by(`Property Type`) %>% summarise("mean_price" = mean(Price))
?summarise
P_type_cnt <- airbnb %>% group_by(`Property Type`) %>% summarise("mean_price" = max(Price))
P_type_cnt <- airbnb %>% group_by(`Property Type`) %>% summarise("max_price" = max(Price))
P_type_cnt <- airbnb %>% group_by(`Property Type`) %>% summarise("mean_price" =mean(Price),"max_price" = max(Price))
P_type_cnt <- airbnb %>% group_by(`Property Type`) %>% summarise("mean_price" =mean(Price),"max_price" = max(Price)) %>% ungroup()
library(tidyr)
P_type_cnt <- airbnb %>% group_by(`Property Type`) %>% summarise("mean_price" =mean(Price))
Spread <- airbnb %>% select(Neighbourhood,Price)
View(Spread)
?spread
Spread <- airbnb %>% select(Neighbourhood,Price) %>% spread(.,Neighbourhood,Price)
NROW(airbnb)
Spread <- airbnb %>% select(Neighbourhood,Price) %>%
mutate(ID = 1:30479)
Spread <- airbnb %>% select(Neighbourhood,Price) %>%
mutate(ID = 1:NROW(.))
View(Spread)
Spread <- airbnb %>% select(Neighbourhood,Price) %>%
mutate(ID = 1:NROW(.)) %>% select(ID,Neighbourhood,Price)
Spread <- airbnb %>% select(Neighbourhood,Price) %>%
mutate(ID = 1:NROW(.)) %>% select(ID,Neighbourhood,Price) %>% spread(.,Neighbourhood,Price)
Spread %>% gather(.,Neighbourhood,Price)
Gather <- Spread %>% gather(.,Neighbourhood,Price)
View(Gather)
?gather
Gather <- Spread %>% gather(.,ID,Price)
airbnb %>% select(Neighbourhood,Price) %>%
mutate(ID = 1:NROW(.))
Gather <- Spread %>% gather(.,ID,Price) %>% na.rm()
Gather <- Spread %>% gather(.,ID,Price) %>% rm.na()
Gather <- Spread %>% gather(.,ID,Price) %>% filter(!is.na(Price))
Gather <- Spread %>% gather(.,ID,Price) %>% na.omit()
View(airbnb_2)
1/3,7951
1/3.7951
X <- airbnb_2 %>% mutate(Price = Price/0.2634977)
View(X)
X <- airbnb_2 %>% mutate(Price_2 = Price/0.2634977)
X <- airbnb_2 %>% mutate(Addition = Beds+`Number of Records`)
View(X)
X <- airbnb_2 %>% mutate(Addition = Beds+`Review Scores Rating`)
airbnb_2$`Review Scores Rating`[is.na(airbnb_2$`Review Scores Rating`)]
airbnb_2$`Review Scores Rating`[is.na(airbnb_2$`Review Scores Rating`)] <- 0
airbnb_2$`Property Type`[airbnb_2$`Property Type` == "Apartment"]
airbnb_2$`Property Type`[airbnb_2$`Property Type` == "Apartment"] <- "FLAT"
airbnb_2$Changed_Property[airbnb_2$`Property Type` == "Apartment"] <- "FLAT"
airbnb_2 <- airbnb %>%
filter(!is.na(airbnb$`Host Since`)) %>%
mutate(Host_Since = ymd(`Host Since`)) %>%
filter(Host_Since >= "2015-01-01" & Host_Since < "2015-02-01")
airbnb_2$Changed_Property <- NA
airbnb_2$Changed_Property <- "OK"
airbnb_2$Changed_Property <- NA
airbnb_2$Changed_Property[airbnb_2$`Property Type` == "Apartment"] <- "FLAT"
airbnb_2$TWO_bed_apartments <- NA
airbnb_2$TWO_bed_apartments[airbnb_2$`Property Type` == "Apartment" $ airbnb_2$Beds == 2] <- "2 Bed Apartments"
airbnb_2$TWO_bed_apartments[airbnb_2$`Property Type` == "Apartment" & airbnb_2$Beds == 2] <- "2 Bed Apartments"
library(readr) # load data package
library(readxl) # load data package
library(dplyr) # data manipulation
library(lubridate) # working with dates
library(tidyr)
library(plotly)
install.packages("plotly")
library(plotly)
library(readr) # load data package
library(readxl) # load data package
library(dplyr) # data manipulation
library(lubridate) # working with dates
library(tidyr)
library(plotly)
library(magrittr)
p <- plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
p
p
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
View(data)
data <- data.frame("ZOO_ANIMALS" = Animals, SF_Zoo, LA_Zoo)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
p <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p <- plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
p
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
p2 <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p2
p <- plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
p
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
data
p2 <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p2
p <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p <- plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
p3 <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p3
p3 <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'pie', name = 'SF Zoo')
p3
?plot_ly
p <- plot_ly(
labels = c("giraffes", "orangutans", "monkeys"),
values = c(20, 14, 23),
type = "pie")
p
p2
gg <- ggplot(diamonds, aes(carat)) +
geom_histogram()
gg
library(plotly)
p <- plot_ly(x = ~rnorm(50), type = "histogram")
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="histogram-basic")
p <- plot_ly(x = ~rnorm(50), type = "histogram")
p
airbnb <- read_excel("Data/airbnb.xlsx")
View(airbnb)
p <- plot_ly(x = airbnb$Price, type = "histogram")
p
airbnb$Price[airbnb$Price < 1000]
p <- plot_ly(x = airbnb$Price[airbnb$Price < 1000], type = "histogram")
p
airbinb_price_below_1000 <- airbnb$Price[airbnb$Price < 1000]
p <- plot_ly(x = airbinb_price_below_1000, type = "histogram")
p
airbinb_price_below_1000 <- airbnb$Price[airbnb$Price < 1000 & airbnb$Neighbourhood == "Brooklyn"]
p <- plot_ly(x = airbinb_price_below_1000, type = "histogram")
p
airbinb_price_below_1000_Brook <- airbnb$Price[airbnb$Price < 1000 & airbnb$Neighbourhood == "Brooklyn"]
table(airbnb$Neighbourhood)
airbinb_price_below_1000_Man <- airbnb$Price[airbnb$Price < 1000 & airbnb$Neighbourhood == "Manhattan"]
p <- plot_ly(x = airbinb_price_below_1000_Brook, type = "histogram") %>% add_trace(
x = airbinb_price_below_1000_Man, type = "histogram"
)
p
p <- plot_ly(x = airbinb_price_below_1000_Brook, type = "histogram", name = 'Brooklyn Prices < 1000') %>% add_trace(
x = airbinb_price_below_1000_Man, type = "histogram", name = 'Manhattan Prices < 1000'
)
p
?layout
?plotly::layout
p <- plot_ly(alpha = 0.6) %>%
add_histogram(x = airbinb_price_below_1000_Brook, name = 'Brooklyn Prices < 1000') %>%
add_histogram(x = airbinb_price_below_1000_Man, name = 'Manhattan Prices < 1000') %>%
layout(barmode = "overlay")
p
p <- plot_ly(alpha = 0.9) %>%
add_histogram(x = airbinb_price_below_1000_Brook, name = 'Brooklyn Prices < 1000') %>%
add_histogram(x = airbinb_price_below_1000_Man, name = 'Manhattan Prices < 1000') %>%
layout(barmode = "overlay")
p
p <- plot_ly(alpha = 0.1) %>%
add_histogram(x = airbinb_price_below_1000_Brook, name = 'Brooklyn Prices < 1000') %>%
add_histogram(x = airbinb_price_below_1000_Man, name = 'Manhattan Prices < 1000') %>%
layout(barmode = "overlay")
p
p <- plot_ly(alpha = 0.6) %>%
add_histogram(x = airbinb_price_below_1000_Brook, name = 'Brooklyn Prices < 1000') %>%
add_histogram(x = airbinb_price_below_1000_Man, name = 'Manhattan Prices < 1000') %>%
layout(barmode = "overlay", title = "Prices Distribution in Brooklyn and Manhttan")
p
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
View(df)
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("black"), width = 4)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('green')
)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('green')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Orange'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Oranges'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p
?install.packages()
Packages <- c("readr","readxl")
